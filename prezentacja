1. 
a)
Nazwa: 
MoveFaster

Autorzy: 
Krystian Koza - 
Jakub Michałek - 
Mateusz Janiczek -

Data ukończenia: 19.12.2024

Version 1.2 Beta

b)
Aplikacja rozwiązuje problem braku centralnego i efektywnego zarządzania rozkładami jazdy. Umożliwia szybką zmianę przez administratora miejsca, daty, ceny danego połączenia, a użytkownik może sprawdzić zaktualizowany rozkład w każdej chwili oraz kupić bilety na konkretny przejazd. Dzięki niej zarówno administratorzy, jak i pasażerowie mogą korzystać z intuicyjnego i wygodnego systemu do obsługi transportu publicznego i przewozów prywatnych.

Aplikacja zawiera możliwość tworzenia kont, logowanie, rejestracja. Po zalogowaniu istnieje możliwość zarządzania rozkładem jazdy. Administrator może dodawać, edytować, wyświetlać rozkład jazdy. 

c)
Krystian Koza - programista odpowiedzialny za tworzenie systemu rejestracji/logowania
Mateusz Janiczek - programista odpowiedzialny za tworzenie rozkładu jazdy
Jakub Michałek - project manager 

Wybranie języka c#
Dodanie bibliotek do generowania biletu jako zdjęcia wraz z kodem QR

d)

g) Załączniki
Fragmenty kodu źródłowego
Przykład funkcji rejestracji:

public static void rejestracja()
{
    string imie, nazwisko, email, haslo, uprawnienia;
    Console.Clear();
    do
    {
        try
        {
            Console.WriteLine("=============");
            Console.WriteLine(" REJESTRACJA ");
            Console.WriteLine("=============");
            Console.WriteLine("\nPodaj swoje imie: ");
            imie = Console.ReadLine()!;
            Console.WriteLine("\nPodaj adres email: ");
            email = Console.ReadLine()!;

            if (CzyIstniejEmail(email))
            {
                Console.WriteLine("\nBłąd, istnieje już konto z takim emailem!");
                continue;
            }

            Console.WriteLine("\nPodaj hasło: ");
            haslo = Console.ReadLine()!;

            if (SprawdzPoprawnoscHasla(haslo) == false)
            {
                Console.WriteLine("\nBłąd! - Hasło jest niepoprawne. Spróbuj jeszcze raz.\n");
                continue;
            }

            uprawnienia = "user";
            User nowyUzytkownik = new User(imie, nazwisko, email, haslo, uprawnienia);
            listaUzytkownikow.Add(nowyUzytkownik);
            Console.WriteLine("Rejestracja zakończona pomyślnie!");
            break;
        }
        catch (Exception error)
        {
            Console.WriteLine($"Błąd! - {error.Message}");
        }
    } while (true);
}

Wyniki testów
Scenariusz: Rejestracja nowego użytkownika

Wejście: imie: Jan, nazwisko: Kowalski, email: jan.kowalski@gmail.com, hasło: Haslo123
Wynik: Sukces, użytkownik zapisany w pliku users.txt.
Scenariusz: Logowanie nieistniejącego użytkownika

Wejście: email: jan.kowalski@gmail.com, hasło: rekinek123
Wynik: Komunikat o błędnym logowaniu.

Scenariusz: Dodanie nowego połączenia do rozkładu jazdy
Wejście: Warszawa - Kraków, 10:00, 14:00, 100
Wynik: Połączenie zapisane w rozkładzie.
